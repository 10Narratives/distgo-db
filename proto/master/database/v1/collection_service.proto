syntax = "proto3";

package master.database.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "validate/validate.proto";

option java_multiple_files = true;
option java_package = "com.google.master.database.v1";
option go_package = "github.com/10Narratives/distgo-db/pkg/proto/master/database/v1;mdbv1";

service CollectionService {
  rpc ListCollections(ListCollectionsRequest) returns (ListCollectionsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/{parent=databases/*}/collections"
    };
  }

  rpc GetCollection(GetCollectionRequest) returns (Collection) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=databases/*/collections/*}"
    };
  }

  rpc CreateCollection(CreateCollectionRequest) returns (Collection) {
    option (google.api.http) = {
      post: "/v1alpha1/{parent=databases/*}/collections"
      body: "collection"
    };
  }

  rpc UpdateCollection(UpdateCollectionRequest) returns (Collection) {
    option (google.api.http) = {
      patch: "/v1alpha1/{collection.name=databases/*/collections/*}"
      body: "collection"
    };
  }

  rpc DeleteCollection(DeleteCollectionRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=databases/*/collections/*}"
    };
  }
}

message Collection {
  option (google.api.resource) = {
    type: "worker.database.v1/Collection"
    pattern: "databases/{database}/collections/{collection}"
  };

  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  string description = 2 [
    (validate.rules).string.max_len = 1024
  ];

  google.protobuf.Timestamp created_at = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
  google.protobuf.Timestamp updated_at = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message ListCollectionsRequest {
  string parent = 1 [
    (validate.rules).string.pattern = "^databases\\/[^\\/]+$",
    (google.api.field_behavior) = REQUIRED
  ];

  int32 page_size = 2 [
    (validate.rules).int32 = { gte: 0, lte: 1000 }
  ];

  string page_token = 3;
}

message ListCollectionsResponse {
  repeated Collection collections = 1;
  string next_page_token = 2;
}

message GetCollectionRequest {
  string name = 1 [
    (validate.rules).string.pattern = "^databases\\/[^\\/]+\\/collections\\/[^\\/]+$",
    (google.api.field_behavior) = REQUIRED
  ];
}

message CreateCollectionRequest {
  string parent = 1 [
    (validate.rules).string.pattern = "^databases\\/[^\\/]+$",
    (google.api.field_behavior) = REQUIRED
  ];

  string collection_id = 2 [
    (validate.rules).string = {
      ignore_empty: true,
      min_len: 1,
      max_len: 64,
      pattern: "^[a-zA-Z0-9\\-_.]*$"
    },
    (google.api.field_behavior) = OPTIONAL
  ];

  Collection collection = 3 [
    (validate.rules).message = { required: true },
    (google.api.field_behavior) = REQUIRED
  ];
}

message UpdateCollectionRequest {
  Collection collection = 1 [
    (validate.rules).message = { required: true },
    (google.api.field_behavior) = REQUIRED
  ];

  google.protobuf.FieldMask update_mask = 2;
}

message DeleteCollectionRequest {
  string name = 1 [
    (validate.rules).string.pattern = "^databases\\/[^\\/]+\\/collections\\/[^\\/]+$",
    (google.api.field_behavior) = REQUIRED
  ];
}