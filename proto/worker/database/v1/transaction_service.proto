syntax = "proto3";

package worker.database.v1;

import "google/protobuf/empty.proto";
import "validate/validate.proto";
import "worker/database/v1/mutation_type.proto";
import "worker/database/v1/entity_type.proto";

option java_multiple_files = true;
option java_package = "com.google.worker.database.v1";
option go_package = "github.com/10Narratives/distgo-db/pkg/proto/worker/database/v1;dbv1";

service TransactionService {
  rpc Begin (BeginRequest) returns (BeginResponse);
  rpc Execute (ExecuteRequest) returns (google.protobuf.Empty);
  rpc Commit (CommitRequest) returns (google.protobuf.Empty);
  rpc Rollback (RollbackRequest) returns (google.protobuf.Empty);
}

message BeginRequest {
  string database_name = 1 [
    (validate.rules).string.min_len = 1
  ];
}

message BeginResponse {
  string transaction_id = 1 [
    (validate.rules).string.min_len = 1
  ];
}

message Operation {
  MutationType mutation_type = 1 [
    (validate.rules).enum.defined_only = true
  ];
  
  EntityType entity_type = 2 [
    (validate.rules).enum.defined_only = true
  ];
  
  string name = 3 [
    (validate.rules).string.min_len = 1
  ];
  
  string value = 4;
}

message ExecuteRequest {
  string database_name = 1 [
    (validate.rules).string.min_len = 1
  ];
  
  string transaction_id = 2 [
    (validate.rules).string.min_len = 1
  ];
  
  repeated Operation operations = 3 [
    (validate.rules).repeated = {
      min_items: 1,
      items: { message: { required: true } }
    }
  ];
}

message CommitRequest {
  string database_name = 1 [
    (validate.rules).string.min_len = 1
  ];
  
  string transaction_id = 2 [
    (validate.rules).string.min_len = 1
  ];
}

message RollbackRequest {
  string database_name = 1 [
    (validate.rules).string.min_len = 1
  ];
  
  string transaction_id = 2 [
    (validate.rules).string.min_len = 1
  ];
}