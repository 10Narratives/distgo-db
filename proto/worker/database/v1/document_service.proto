syntax = "proto3";

package worker.database.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "validate/validate.proto";

option java_multiple_files = true;
option java_package = "com.google.worker.database.v1";
option go_package = "github.com/10Narratives/distgo-db/pkg/proto/worker/database/v1;dbv1";

service DocumentService {
  rpc ListDocuments(ListDocumentsRequest) returns (ListDocumentsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/{parent=databases/*/collections/*}/documents"
    };
  }

  rpc GetDocument(GetDocumentRequest) returns (Document) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=databases/*/collections/*/documents/*}"
    };
  }

  rpc CreateDocument(CreateDocumentRequest) returns (Document) {
    option (google.api.http) = {
      post: "/v1alpha1/{parent=databases/*/collections/*}/documents"
      body: "document"
    };
  }

  rpc UpdateDocument(UpdateDocumentRequest) returns (Document) {
    option (google.api.http) = {
      patch: "/v1alpha1/{document.name=databases/*/collections/*/documents/*}"
      body: "document"
    };
  }

  rpc DeleteDocument(DeleteDocumentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=databases/*/collections/*/documents/*}"
    };
  }
}

message Document {
  option (google.api.resource) = {
    type: "worker.database.v1/Document"
    pattern: "databases/{database}/collections/{collection}/documents/{document}"
  };

  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  string id = 2 [
    (validate.rules).string = {
      ignore_empty: true,
      min_len: 1,
      max_len: 64,
      pattern: "^[a-zA-Z0-9\\-_.]*$"
    },
    (google.api.field_behavior) = INPUT_ONLY
  ];

  string value = 3 [
    (validate.rules).string = {
      min_len: 1,
      max_len: 4096
    },
    (google.api.field_behavior) = REQUIRED
  ];

  google.protobuf.Timestamp created_at = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
  google.protobuf.Timestamp updated_at = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message ListDocumentsRequest {
  string parent = 1 [
    (validate.rules).string.pattern = "^databases\\/[^\\/]+\\/collections\\/[^\\/]+$",
    (google.api.field_behavior) = REQUIRED
  ];

  int32 page_size = 2 [
    (validate.rules).int32 = { gte: 0, lte: 1000 }
  ];

  string page_token = 3;
}

message ListDocumentsResponse {
  repeated Document documents = 1;
  string next_page_token = 2;
}

message GetDocumentRequest {
  string name = 1 [
    (validate.rules).string.pattern = "^databases\\/[^\\/]+\\/collections\\/[^\\/]+\\/documents\\/[^\\/]+$",
    (google.api.field_behavior) = REQUIRED
  ];
}

message CreateDocumentRequest {
  string parent = 1 [
    (validate.rules).string.pattern = "^databases\\/[^\\/]+\\/collections\\/[^\\/]+$",
    (google.api.field_behavior) = REQUIRED
  ];

  string document_id = 2 [
    (validate.rules).string = {
      ignore_empty: true,
      min_len: 1,
      max_len: 64,
      pattern: "^[a-zA-Z0-9\\-_.]*$"
    },
    (google.api.field_behavior) = OPTIONAL
  ];

  Document document = 3 [
    (validate.rules).message = { required: true },
    (google.api.field_behavior) = REQUIRED
  ];
}

message UpdateDocumentRequest {
  Document document = 1 [
    (validate.rules).message = { required: true },
    (google.api.field_behavior) = REQUIRED
  ];

  google.protobuf.FieldMask update_mask = 2;
}

message DeleteDocumentRequest {
  string name = 1 [
    (validate.rules).string.pattern = "^databases\\/[^\\/]+\\/collections\\/[^\\/]+\\/documents\\/[^\\/]+$",
    (google.api.field_behavior) = REQUIRED
  ];
}