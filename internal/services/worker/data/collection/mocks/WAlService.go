// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	collectionmodels "github.com/10Narratives/distgo-db/internal/models/worker/data/collection"

	commonmodels "github.com/10Narratives/distgo-db/internal/models/worker/data/common"

	context "context"

	mock "github.com/stretchr/testify/mock"
)

// WAlService is an autogenerated mock type for the WAlService type
type WAlService struct {
	mock.Mock
}

// CreateCollectionEntry provides a mock function with given fields: ctx, mutation, key, coll
func (_m *WAlService) CreateCollectionEntry(ctx context.Context, mutation commonmodels.MutationType, key collectionmodels.Key, coll *collectionmodels.Collection) error {
	ret := _m.Called(ctx, mutation, key, coll)

	if len(ret) == 0 {
		panic("no return value specified for CreateCollectionEntry")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, commonmodels.MutationType, collectionmodels.Key, *collectionmodels.Collection) error); ok {
		r0 = rf(ctx, mutation, key, coll)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewWAlService creates a new instance of WAlService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWAlService(t interface {
	mock.TestingT
	Cleanup(func())
}) *WAlService {
	mock := &WAlService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
